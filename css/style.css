/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/*
  The root font-size is set on the html selector.
  The value of 10px is set to make our calculation easier when
  converting px to rem. 1rem === root font-size === 10px
  This way we avoid the calculation of rem based on the
  default font-size of 16px.

  IMPORTANT!! setting up the font-size in px is a bad practice
  it must be set up in % to allow the user to change the default size.
  what value in % to set up?
  100% === 16px [default browser font-size]
  62.5% === 10px value we want

  IMPORTANT!! setting up the order of media queries
  always order the media queries based on the design strategy that was defined
  in this case the design strategy was DESKTOP FIRST so
  the media queries must be order from big desktop to phones breakpoint
  remember the CSS overwrite the values properties from top to bottom on each file

*/
html {
  /*
  		font-size: 12px;
  		12px / 16px = 0.75
  */
  /*
  		font-size: 10px;
  		10px / 16px = 0.625
  */
  font-size: 62.5%;
  /*
  		font-size: 9px;
  		9px / 16px = 0.5625
  */
  /*
  		font-size: 8px;
  		8px / 16px = 0.5
  */
  /*
  		font-size: 6px;
  		6px / 16px = 0.375
  */
}
@media only screen and (min-width: 112.5em) {
  html {
    font-size: 75%;
  }
}
@media only screen and (max-width: 75em) {
  html {
    font-size: 56.25%;
  }
}
@media only screen and (max-width: 56.25em) {
  html {
    font-size: 50%;
  }
}
@media only screen and (max-width: 37.5em) {
  html {
    font-size: 37.5%;
  }
}

body {
  padding: 3rem;
  box-sizing: border-box;
}
@media only screen and (max-width: 56.25em) {
  body {
    padding: 0;
  }
}

::selection {
  background-color: #55c57a;
  color: #fff;
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* No need font-size in body when converting px to rem */
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /*
    using backface-visibility property to avoid
    the container shaking after animation
   */
  backface-visibility: hidden;
}
.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*
    animation-delay: 3s;
    animation-iteration-count: 3;
  */
}
@media only screen and (max-width: 37.5em) {
  .heading-primary--main {
    font-size: 5rem;
    letter-spacing: 1rem;
  }
}
.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;
}
@media only screen and (max-width: 37.5em) {
  .heading-primary--sub {
    letter-spacing: 0.5rem;
  }
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s;
}
@media only screen and (max-width: 56.25em) {
  .heading-secondary {
    font-size: 3rem;
  }
}
@media only screen and (max-width: 37.5em) {
  .heading-secondary {
    font-size: 2.5rem;
    letter-spacing: 0.1rem;
  }
}
.heading-secondary:hover {
  transform: skewY(2deg) skewX(15deg);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  text-transform: uppercase;
  font-weight: 700;
}

.paragraph {
  font-size: 1.6rem;
}
.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.u-center-text {
  text-align: center;
}

.u-margin-top-small {
  margin-top: 1.5rem;
}

.u-margin-top-medium {
  margin-top: 4rem;
}

.u-margin-top-large {
  margin-top: 8rem;
}

.u-margin-top-x-large {
  margin-top: 10rem;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}
@media only screen and (max-width: 56.25em) {
  .u-margin-bottom-small {
    margin-bottom: 1rem;
  }
}

.u-margin-bottom-medium {
  margin-bottom: 4rem;
}
@media only screen and (max-width: 56.25em) {
  .u-margin-bottom-medium {
    margin-bottom: 2rem;
  }
}

.u-margin-bottom-large {
  margin-bottom: 8rem;
}
@media only screen and (max-width: 56.25em) {
  .u-margin-bottom-large {
    margin-bottom: 5rem;
  }
}

.u-margin-bottom-x-large {
  margin-bottom: 10rem;
}
@media only screen and (max-width: 56.25em) {
  .u-margin-bottom-x-large {
    margin-bottom: 6rem;
  }
}

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 0.15;
}
.bg-video__content {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.btn {
  /*
    create a button behind the btn-white in the header
    and when user hover it scale
  */
}
.btn, .btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  position: relative;
  transition: all 0.2s;
  font-size: 1.6rem;
  border: none;
  cursor: pointer;
}
.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn:active, .btn:focus {
  outline: none;
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}
.btn--white {
  background-color: #fff;
  color: #777;
}
.btn--white::after {
  background-color: #fff;
  color: #777;
}
.btn--green {
  background-color: #55c57a;
  color: #fff;
}
.btn--green::after {
  background-color: #55c57a;
  color: #fff;
}
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /*
    animation-fill-mode: backwards :: applies style of 0% before animation starts
  */
  animation-fill-mode: backwards;
}

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 0.1rem solid #55c57a;
  padding: 0.3rem;
  transition: all 0.2s;
}
.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  transform: translateY(-0.2rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
}
.btn-text:active {
  transform: translateY(0);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem;
}
.card__side {
  height: 52rem;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  border-radius: 0.3rem;
  overflow: hidden;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: all 0.8s ease;
}
.card__side--front {
  background-color: #fff;
}
.card__side--back {
  transform: rotateY(180deg);
}
.card__side--back-1 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730);
}
.card__side--back-2 {
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
}
.card__side--back-3 {
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa);
}
.card:hover .card__side--front {
  transform: rotateY(-180deg);
}
.card:hover .card__side--back {
  transform: rotateY(0);
}
.card__picture {
  background-size: cover;
  height: 23rem;
  background-blend-mode: screen;
  -webkit-clip-path: polygon(0 0, 100% 0%, 100% 85%, 0% 100%);
  clip-path: polygon(0 0, 100% 0%, 100% 85%, 0% 100%);
}
.card__picture--1 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg);
}
.card__picture--2 {
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg);
}
.card__picture--3 {
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg);
}
.card__heading {
  font-size: 2.8rem;
  font-weight: 300;
  text-transform: uppercase;
  text-align: right;
  color: #fff;
  position: absolute;
  top: 12rem;
  right: 2rem;
  width: 75%;
}
.card__heading-span {
  padding: 1rem 1.5rem;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
.card__heading-span--1 {
  background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85));
}
.card__heading-span--2 {
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85));
}
.card__heading-span--3 {
  background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85));
}
.card__details {
  padding: 3rem;
}
.card__details ul {
  list-style: none;
  width: 80%;
  margin: 0 auto;
}
.card__details ul li {
  text-align: center;
  font-size: 1.4rem;
  padding: 1rem;
}
.card__details ul li:not(:last-child) {
  border-bottom: 0.1rem solid #eee;
}
.card__cta {
  position: absolute;
  text-align: center;
  top: 50%;
  left: 50%;
  width: 90%;
  transform: translate(-50%, -50%);
}
.card__price-box {
  text-align: center;
  margin-bottom: 8rem;
  color: #fff;
}
.card__price-only {
  font-size: 1.4rem;
  text-transform: uppercase;
}
.card__price-value {
  font-size: 6rem;
  font-weight: 100;
}
@media only screen and (max-width: 56.25em), only screen and (hover: none) {
  .card {
    height: auto;
    border-radius: 0.3rem;
    background-color: #fff;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  }
  .card:hover .card__side--front {
    transform: rotateY(0);
  }
  .card__details {
    padding: 0 2rem;
  }
  .card__side {
    height: auto;
    width: 100%;
    position: relative;
    box-shadow: none;
  }
  .card__side--back {
    transform: rotateY(0);
    -webkit-clip-path: polygon(0 15%, 100% 0%, 100% 100%, 0% 100%);
    clip-path: polygon(0 15%, 100% 0%, 100% 100%, 0% 100%);
  }
  .card__cta {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    transform: translate(0);
    padding: 6rem 4rem 4rem 4rem;
  }
  .card__price-box {
    margin-bottom: 3rem;
  }
  .card__price-value {
    font-size: 4.5rem;
  }
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.composition {
  position: relative;
}
.composition__photo {
  width: 55%;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  border-radius: 0.2rem;
  position: absolute;
  transition: all 0.2s;
  z-index: 10;
  outline-offset: 2rem;
}
@media only screen and (max-width: 56.25em) {
  .composition__photo {
    width: 33.333333%;
    float: left;
    position: relative;
    box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2);
  }
}
.composition__photo:hover {
  outline: 1.5rem solid #55c57a;
  transform: scale(1.05) translateY(-0.5rem);
  box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
  z-index: 20;
}
.composition__photo--p1 {
  left: 0;
  top: -2rem;
}
@media only screen and (max-width: 56.25em) {
  .composition__photo--p1 {
    top: -1rem;
    left: 3rem;
    transform: scale(1.3);
  }
}
.composition__photo--p2 {
  right: 0;
  top: 2rem;
}
@media only screen and (max-width: 56.25em) {
  .composition__photo--p2 {
    top: 8rem;
    z-index: 100;
    transform: scale(1.3);
  }
}
.composition__photo--p3 {
  top: 10rem;
  left: 20%;
}
@media only screen and (max-width: 56.25em) {
  .composition__photo--p3 {
    left: -3rem;
    top: 1rem;
    transform: scale(1.3);
  }
}
.composition:hover .composition__photo:not(:hover) {
  transform: scale(0.95);
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 0.3rem;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s;
}
@media only screen and (max-width: 56.25em) {
  .feature-box {
    padding: 2rem;
  }
}
.feature-box:hover {
  transform: translateY(-1.5rem) scale(1.03);
}
.feature-box__icon {
  font-size: 6rem;
  margin-bottom: 0.5rem;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
}
@media only screen and (max-width: 56.25em) {
  .feature-box__icon {
    margin-bottom: 0;
  }
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.form__group:not(:last-child) {
  margin-bottom: 2rem;
}
.form__input {
  font-family: inherit;
  color: inherit;
  font-size: 1.4rem;
  padding: 1.5rem 2rem;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  display: block;
  width: 90%;
  border-bottom: 3px solid transparent;
  transition: all 0.3s;
}
.form__input:focus {
  outline: none;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
  border-bottom: 3px solid #55c57a;
}
.form__input:focus:invalid {
  border-bottom: 3px solid #ff7730;
}
.form__input::-webkit-input-placeholder {
  color: #999;
}
.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  margin-left: 2rem;
  margin-top: 0.7rem;
  display: block;
  transition: all 0.3s;
}
.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem);
}
.form__radio-group {
  width: 49%;
  display: inline-block;
}
.form__radio-input {
  display: none;
}
.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  padding-left: 4rem;
}
@media only screen and (max-width: 37.5em) {
  .form__radio-label {
    font-size: 1.3rem;
  }
}
.form__radio-button {
  height: 3rem;
  width: 3rem;
  border: 0.5rem solid #55c57a;
  border-radius: 50%;
  display: inline-block;
  position: absolute;
  left: 0;
  top: -0.4rem;
}
.form__radio-button::after {
  content: "";
  display: block;
  height: 1.3rem;
  width: 1.3rem;
  border-radius: 50%;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background-color: #55c57a;
  opacity: 0;
  transition: opacity 0.2s;
}
.form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
  opacity: 1;
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 3000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;
  background-color: rgba(0, 0, 0, 0.8);
}
@supports (-webkit-backdrop-filter: blur(1rem)) or (backdrop-filter: blur(1rem)) {
  .popup {
    background-color: rgba(0, 0, 0, 0.3);
    -webkit-backdrop-filter: blur(1rem);
    backdrop-filter: blur(1rem);
  }
}
.popup__content {
  width: 75%;
  background-color: #fff;
  box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
  border-radius: 0.3rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.25);
  opacity: 0;
  overflow: hidden;
  display: table;
  transition: all 0.5s 0.2s;
}
@media only screen and (max-width: 75em) {
  .popup__content {
    width: 80%;
  }
}
@media only screen and (max-width: 56.25em) {
  .popup__content {
    width: 70%;
  }
}
.popup__left {
  width: 35.333333%;
  display: table-cell;
}
@media only screen and (max-width: 75em) {
  .popup__left {
    width: 47.333333%;
  }
}
@media only screen and (max-width: 56.25em) {
  .popup__left {
    display: none;
  }
}
.popup__right {
  width: 64.666667%;
  height: auto;
  display: table-cell;
  vertical-align: middle;
  padding: 3rem 5rem;
}
@media only screen and (max-width: 75em) {
  .popup__right {
    width: 52.666667%;
  }
}
.popup__img {
  display: block;
  width: 100%;
}
.popup__text {
  font-size: 1.4rem;
  -moz-column-count: 2;
  -moz-column-gap: 4rem;
  -moz-column-rule: 0.1rem solid #eee;
  -webkit-column-count: 2;
  -webkit-column-gap: 4rem;
  -webkit-column-rule: 0.1rem solid #eee;
  column-count: 2;
  column-gap: 4rem;
  column-rule: 0.1rem solid #eee;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}
@media only screen and (max-width: 75em) {
  .popup__text {
    -moz-column-count: 1;
    -webkit-column-count: 1;
    column-count: 1;
  }
}
.popup:target {
  opacity: 1;
  visibility: visible;
}
.popup:target .popup__content {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}
.popup__close:link, .popup__close:visited {
  color: #777;
  font-size: 3rem;
  position: absolute;
  top: 2.5rem;
  right: 2.5rem;
  text-decoration: none;
  line-height: 0;
  transition: all 0.3s;
}
.popup__close:link:hover, .popup__close:visited:hover {
  color: #55c57a;
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 0.3rem;
  padding: 6rem 6rem 6rem 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
}
@media only screen and (max-width: 56.25em) {
  .story {
    width: 100%;
    padding: 4rem 4rem 4rem 7rem;
  }
}
@media only screen and (max-width: 37.5em) {
  .story {
    transform: skewX(0);
  }
}
.story__shape {
  width: 15rem;
  height: 15rem;
  float: left;
  position: relative;
  -webkit-shape-outside: circle(50% at 50% 50%);
  shape-outside: circle(50% at 50% 50%);
  -webkit-clip-path: circle(50% at 50% 50%);
  clip-path: circle(50% at 50% 50%);
  transform: translateX(-3rem) skewX(12deg);
}
@media only screen and (max-width: 37.5em) {
  .story__shape {
    transform: translateX(-3rem) skewX(0);
  }
}
.story__img {
  height: 100%;
  transform: translateX(-4rem) scale(1.4);
  transition: all 0.5s;
}
.story__caption {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, 0);
  color: #fff;
  text-transform: uppercase;
  font-size: 1.7rem;
  text-align: center;
  transition: all 0.5s;
  opacity: 0;
  backface-visibility: hidden;
}
.story__text {
  transform: skewX(12deg);
}
@media only screen and (max-width: 37.5em) {
  .story__text {
    transform: skewX(0);
  }
}
.story:hover .story__caption {
  transform: translate(-50%, -50%);
  opacity: 1;
}
.story:hover .story__img {
  transform: translateX(-4rem) scale(1);
  filter: blur(0.3rem) brightness(80%);
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7;
}
.footer__logo-box {
  text-align: center;
  margin-bottom: 8rem;
}
@media only screen and (max-width: 56.25em) {
  .footer__logo-box {
    margin-bottom: 6rem;
  }
}
.footer__logo {
  width: 15rem;
  height: auto;
}
.footer__navigation {
  border-top: 0.1rem solid #777;
  padding-top: 2rem;
  display: inline-block;
}
@media only screen and (max-width: 56.25em) {
  .footer__navigation {
    display: block;
    text-align: center;
  }
}
.footer__list {
  list-style: none;
}
.footer__item {
  display: inline-block;
}
.footer__item:not(:last-child) {
  margin-right: 1.5rem;
}
.footer__link:link, .footer__link:visited {
  background-color: #333;
  color: #f7f7f7;
  text-decoration: none;
  text-transform: uppercase;
  display: inline-block;
  transition: all 0.2s;
}
.footer__link:hover, .footer__link:active {
  color: #55c57a;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
  transform: rotate(5deg) scale(1.3);
}
.footer__copyright {
  border-top: 0.1rem solid #777;
  padding-top: 2rem;
  width: 80%;
  float: right;
}
@media only screen and (max-width: 56.25em) {
  .footer__copyright {
    width: 100%;
    float: none;
  }
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
[class^=col-] {
  float: left;
}
[class^=col-]:not(:last-child) {
  margin-right: 6rem;
}
@media only screen and (max-width: 56.25em) {
  [class^=col-]:not(:last-child) {
    margin-right: 0;
    margin-bottom: 3rem;
  }
}
@media only screen and (max-width: 56.25em) {
  [class^=col-] {
    width: 100% !important;
  }
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}
@media only screen and (max-width: 56.25em) {
  .row {
    max-width: 60rem;
    padding: 0 3rem;
  }
}
.row:not(:last-child) {
  margin-bottom: 8rem;
}
@media only screen and (max-width: 56.25em) {
  .row:not(:last-child) {
    margin-bottom: 3rem;
  }
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
}
.row .col-1-of-3 {
  width: calc((100% - 2 * 6rem) / 3);
}
.row .col-2-of-3 {
  width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem);
}
.row .col-1-of-4 {
  width: calc((100% - 3 * 6rem) / 4);
}
.row .col-2-of-4 {
  width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem);
}
.row .col-3-of-4 {
  width: calc((3 * (100% - 3 * 6rem) / 4) + 2 * 6rem);
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.header {
  height: 95vh;
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
  clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
}
@media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), only screen and (-webkit-device-pixel-ratio: 2) and (min-width: 37.5em), only screen and (min-width: 112.5em) {
  .header {
    background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  }
}
@media only screen and (max-width: 75em) {
  .header {
    -webkit-clip-path: polygon(0 0, 100% 0%, 100% 81vh, 0% 100%);
    clip-path: polygon(0 0, 100% 0%, 100% 81vh, 0% 100%);
  }
}
@media only screen and (max-width: 56.25em) {
  .header {
    height: 75vh;
    -webkit-clip-path: polygon(0 0, 100% 0%, 100% 68vh, 0% 100%);
    clip-path: polygon(0 0, 100% 0%, 100% 68vh, 0% 100%);
  }
}
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 3.5rem;
}
.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.nav__checkbox {
  display: none;
}
.nav__button {
  height: 7rem;
  width: 7rem;
  position: fixed;
  cursor: pointer;
  top: 6rem;
  right: 6rem;
  border-radius: 50%;
  background-color: #fff;
  z-index: 2000;
  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
}
@media only screen and (max-width: 56.25em) {
  .nav__button {
    top: 3rem;
    right: 3rem;
  }
}
.nav__icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.nav__icon, .nav__icon::before, .nav__icon::after {
  width: 3rem;
  height: 0.2rem;
  display: inline-block;
  background-color: #777;
}
.nav__icon::before, .nav__icon::after {
  content: "";
  position: absolute;
  left: 0;
  transition: all 0.2s;
}
.nav__icon::before {
  transform: translateY(-0.8rem);
}
.nav__icon::after {
  transform: translateY(0.8rem);
}
.nav__button:hover .nav__icon::before {
  transform: translateY(-1rem);
}
.nav__button:hover .nav__icon::after {
  transform: translateY(1rem);
}
.nav__checkbox:checked + .nav__button .nav__icon {
  background-color: transparent;
}
.nav__checkbox:checked + .nav__button .nav__icon::before {
  transform: rotate(135deg);
}
.nav__checkbox:checked + .nav__button .nav__icon::after {
  transform: rotate(-135deg);
}
.nav__checkbox:checked ~ .nav__background {
  transform: scale(80);
}
.nav__checkbox:checked ~ .nav__container {
  opacity: 1;
  width: 100%;
}
.nav__background {
  height: 6rem;
  width: 6rem;
  position: fixed;
  top: 6.5rem;
  right: 6.5rem;
  border-radius: 50%;
  background-color: #55c57a;
  background-image: radial-gradient(#7ed56f, #28b485);
  z-index: 1000;
  transition: transform 0.6s cubic-bezier(0.83, 0, 0.17, 1);
}
@media only screen and (max-width: 56.25em) {
  .nav__background {
    top: 3.5rem;
    right: 3.5rem;
  }
}
.nav__container {
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1500;
  opacity: 0;
  width: 0;
  transition: all 0.6s cubic-bezier(0.68, -0.6, 0.32, 1.6);
}
.nav__list {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  list-style: none;
  text-align: center;
}
@media only screen and (max-width: 37.5em) {
  .nav__list {
    position: relative;
  }
}
.nav__item {
  margin: 1rem;
}
.nav__link {
  color: #fff;
}
.nav__link:link, .nav__link:active {
  display: inline-block;
  font-size: 3rem;
  font-weight: 300;
  padding: 1rem 2rem;
  text-decoration: none;
  text-transform: uppercase;
  background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #fff 50%);
  background-size: 230%;
  transition: all 0.4s;
}
.nav__link:link span, .nav__link:active span {
  margin-right: 1.5rem;
  display: inline-block;
}
.nav__link:hover, .nav__link:active {
  background-position: 100%;
  color: #55c57a;
  transform: translateX(1rem);
}

/*
		Screen Range		:		Breakpoints		:		Description
		0 - 600px 					phone							Phone screen
		600 - 900px					tabPort						Tablet Portrait screen
		900 - 1200px				tabLand						Tablet Landscape screen
		1200 - 1800px													Desktop screen where our styles apply
		1800 - +						bigDesktop				Big Desktop screen

		IMPORTANT ABOUT MEDIA QUERY UNITS
		- always use a relative unit based on the default Browser font-size
		- for better performance in media queries use always em units
		- 1em === the default Browser font-size === 16px
		- how to calculate the unit for each breakpoint?
			600 px 	=== 600 / 16 	=== 37.5em
			900 px 	=== 900 / 16 	=== 56.25em
			1200 px === 1200 / 16 === 75em
			1800 px === 1800 / 16 === 112.5em
		- each em unit will be calculated by the Browser to px and will be adapted to the font-size
			that the user setup on the browser

		ORDER OF RESPONSIVE IMPLEMENTATION BY SASS FOLDERS
		1. base folder : _base _typography
		3. layout folder : _grid _header _footer _nav
		3. pages folder
		4. components folder
 */
.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
}
@media only screen and (max-width: 75em) {
  .section-about {
    margin-top: -15vh;
    margin-bottom: 5rem;
  }
}
@media only screen and (max-width: 37.5em) {
  .section-about {
    margin-top: -12vh;
    padding: 20rem 1.3rem 25rem 1.3rem;
  }
}

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -11rem;
}
@media only screen and (max-width: 56.25em) {
  .section-features {
    padding: 10rem 0;
  }
}
.section-features > * {
  transform: skewY(7deg);
}

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -11rem;
}
@media only screen and (max-width: 56.25em) {
  .section-tours {
    padding: 20rem 0 10rem 0;
  }
}

.section-stories {
  padding: 15rem 0;
  position: relative;
}
@media only screen and (max-width: 56.25em) {
  .section-stories {
    padding: 7rem 0 3rem 0;
  }
}

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
}
@media only screen and (max-width: 56.25em) {
  .section-book {
    padding: 10rem 0;
  }
}

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: cover;
  border-radius: 0.3rem;
  box-shadow: 0 1.5rem 6rem rgba(0, 0, 0, 0.2);
}
@media only screen and (max-width: 56.25em) {
  .book {
    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg);
  }
}
.book__form {
  width: 50%;
  padding: 6rem;
}
@media only screen and (max-width: 56.25em) {
  .book__form {
    width: 100%;
  }
}

/*# sourceMappingURL=style.css.map */
