@import "../abstracts/variables";

.btn {
	&,
	&:link,
	&:visited {
		text-transform: uppercase;
		text-decoration: none;
		padding: 1.5rem 4rem;
		display: inline-block;
		border-radius: 10rem;
		position: relative;
		transition: all .2s;
		font-size: $default-font-size;

		// change only for button elements
		border: none;
		cursor: pointer;

	}

	&:hover {
		transform: translateY(-.3rem);
		box-shadow: 0 1rem 2rem rgba($color-black, .2);

		&::after {
			transform: scaleX(1.4) scaleY(1.6);
			opacity: 0;
		}
	}

	&:active,
	&:focus {
		outline: none;
		transform: translateY(-.1rem);
		box-shadow: 0 .5rem 1rem rgba($color-black, .2);
	}

	&--white {
		background-color: $color-white;
		color: $color-grey-dark-1;

		&::after {
			background-color: $color-white;
			color: $color-grey-dark-1;
		}
	}

	&--green {
		background-color: $color-primary;
		color: $color-white;

		&::after {
			background-color: $color-primary;
			color: $color-white;
		}
	}

	/*
	  create a button behind the btn-white in the header
	  and when user hover it scale
	*/
	&::after {
		content: '';
		display: inline-block;
		height: 100%;
		width: 100%;
		border-radius: 10rem;
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all .4s;
	}

	&--animated {
		animation: moveInBottom .5s ease-out .75s;
		/*
		  animation-fill-mode: backwards :: applies style of 0% before animation starts
		*/
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: $default-font-size;
		color: $color-primary;
		display: inline-block;
		text-decoration: none;
		border-bottom: .1rem solid $color-primary;
		padding: .3rem;
		transition: all 0.2s;
	}

	&:hover {
		background-color: $color-primary;
		color: $color-white;
		transform: translateY(-.2rem);
		box-shadow: 0 1rem 2rem rgba($color-black, .15);
	}

	&:active {
		transform: translateY(0);
		box-shadow: 0 .5rem 1rem rgba($color-black, .15);
	}
}
