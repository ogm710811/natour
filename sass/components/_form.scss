@import "../abstracts/variables";

.form {
	&__group {
		&:not(:last-child) {
			margin-bottom: 2rem;
		}
	}

	&__input {
		font-family: inherit;
		color: inherit;
		font-size: 1.4rem;
		padding: 1.5rem 2rem;
		background-color: rgba($color-white, .5);
		border: none;
		display: block;
		width: 90%;
	  // to avoid the input move a little down when focus
		// we added this border-bottom with transparency
		border-bottom: 3px solid transparent;

		// giving an animation when showing the color border
		// from transparent to $color-primary
		transition: all .3s;

		&:focus {
			// border Browser create around the input when
			// it focus. Always, when setting outline to none
			// add a box-shadow for accessibility
			outline: none;
			box-shadow: 0 1rem 2rem rgba($color-black, .1);
			border-bottom: 3px solid $color-primary;
		}

		// style when input is invalid & focus
		&:focus:invalid {
			border-bottom: 3px solid $color-secondary-dark;
		}


		// allow to style the input placeholder
		// please, check for support by Browsers
		&::-webkit-input-placeholder {
			color: $color-grey-dark-2;
		}
	}

	&__label {
		font-size: 1.2rem;
		font-weight: 700;
		margin-left: 2rem;
		margin-top: .7rem;
		display: block;
		transition: all .3s
	}

	// styling the label based on the input element
	// using the immediately sibling selector
	// ** label needs to be after the input in order
	// to use the sibling selector
	// when writing on the input the label will be shown
	&__input:placeholder-shown + &__label {
		opacity: 0;
		visibility: hidden;
		transform: translateY(-4rem);
	}

	&__radio-group {
		width: 49%;
		display: inline-block;
	}

	&__radio-input {
		display: none;
	}

	&__radio-label {
		font-size: $default-font-size;
		cursor: pointer;
		position: relative;
		padding-left: 4rem;
	}

	&__radio-button {
		height: 3rem;
		width: 3rem;
		border: .5rem solid $color-primary;
		border-radius: 50%;
		display: inline-block;
		position: absolute;
		left: 0;
		top: -.4rem;

		// styling the green circle inner element
		// of the custom radio button
		&::after {
			content: '';
			display: block;
			height: 1.3rem;
			width: 1.3rem;
			border-radius: 50%;
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			background-color: $color-primary;
			opacity: 0;
			transition: opacity .2s;
		}
	}

	// using the checked pseudo class of the radio input
	// to make the magic when clicking the radio button
	// targeting the 'radio-button::after' element
	&__radio-input:checked ~ &__radio-label &__radio-button::after {
		opacity: 1;
	}
}
