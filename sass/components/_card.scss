@import "../abstracts/mixins";
@import "../abstracts/variables";

.card {
	// FUNCTIONALITY
	perspective: 150rem;
	-moz-perspective: 150rem;
	position: relative;
	height: 52rem;

	&__side {
		height: 52rem;
		width: 100%;
		position: absolute;
		top: 0;
		left: 0;
		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;
		border-radius: .3rem;
		// in order the image doesn't hide the border-radius of the card at the top
		// we implement overflow property
		overflow: hidden;
		box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
		transition: all .8s ease;

		&--front {
			background-color: $color-white;
		}

		&--back {
			// at beginning back site is already rotate to 180deg
			transform: rotateY(180deg);

			&-1 {
				background-image: linear-gradient(
												to right bottom,
												$color-secondary-light,
												$color-secondary-dark)
			}

			&-2 {
				background-image: linear-gradient(
												to right bottom,
												$color-primary-light,
												$color-primary-dark)
			}

			&-3 {
				background-image: linear-gradient(
												to right bottom,
												$color-tertiary-light,
												$color-tertiary-dark)
			}
		}
	}

	// when hover the card we want the side to rotate
	&:hover &__side--front {
		transform: rotateY(-180deg);
	}

	&:hover &__side--back {
		transform: rotateY(0);
	}

	// FRONT SIDE STYLING
	&__picture {
		background-size: cover;
		height: 23rem;
		// the background-blend-mode property has different values
		// in order to blend teh image uses as background
		// property not available in IE and EDGE
		background-blend-mode: screen;
		// always pre define the vendor property to be apply across different browsers
		-webkit-clip-path: polygon(0 0, 100% 0%, 100% 85%, 0% 100%);
		clip-path: polygon(0 0, 100% 0%, 100% 85%, 0% 100%);

		&--1 {
			background-image: linear-gradient(
											to right bottom,
											$color-secondary-light,
											$color-secondary-dark),
			url(#{$asset-path}/nat-5.jpg);
		}

		&--2 {
			background-image: linear-gradient(
											to right bottom,
											$color-primary-light,
											$color-primary-dark),
			url(#{$asset-path}/nat-6.jpg);
		}

		&--3 {
			background-image: linear-gradient(
											to right bottom,
											$color-tertiary-light,
											$color-tertiary-dark),
			url(#{$asset-path}/nat-7.jpg);
		}
	}

	&__heading {
		font-size: 2.8rem;
		font-weight: 300;
		text-transform: uppercase;
		text-align: right;
		color: $color-white;
		position: absolute;
		top: 12rem;
		right: 2rem;
		width: 75%;
	}

	&__heading-span {
		padding: 1rem 1.5rem;
		// the box-decoration-break property applies to teh whole box
		// the property applied to the box in this case padding
		// this way the span element becomes 2 boxes with same padding
		// for chrome browser apply -webkit
		-webkit-box-decoration-break: clone;
		box-decoration-break: clone;
		&--1 {
			background-image: linear-gradient(
											to right bottom,
											rgba($color-secondary-light, 0.85),
											rgba($color-secondary-dark, 0.85)),
		}

		&--2 {
			background-image: linear-gradient(
											to right bottom,
											rgba($color-primary-light, 0.85),
											rgba($color-primary-dark, 0.85)),
		}

		&--3 {
			background-image: linear-gradient(
											to right bottom,
											rgba($color-tertiary-light, 0.85),
											rgba($color-tertiary-dark, 0.85)),
		}
	}

	&__details {
		padding: 3rem;

		ul {
			list-style: none;
			width: 80%;
			margin: 0 auto;

			li {
				text-align: center;
				font-size: 1.4rem;
				padding: 1rem;

				&:not(:last-child) {
					border-bottom: .1rem solid $color-grey-light-2;
				}
			}
		}
	}

	// BACK SIDE STYLING
	&__cta {
		position: absolute;
		text-align: center;
		top: 50%;
		left: 50%;
		width: 90%;
		transform: translate(-50%, -50%);
	}

	&__price-box {
		text-align: center;
		margin-bottom: 8rem;
		color: $color-white;
	}

	&__price-only {
		font-size: 1.4rem;
		text-transform: uppercase;
	}

	&__price-value {
		font-size: 6rem;
		font-weight: 100;
	}

	// media query to identify if the user has a
	// device where he can hover.
	// This way if the user has for example a tablet that
	// he can hover (has a mouse connected) the card element
	// will display the rotation card otherwise the other one

	// @include responsive(tabPort)
	@media only screen and (max-width: 56.25em),
				 only screen and (hover: none) {
		// FUNCTIONALITY on media query
		height: auto;
		border-radius: .3rem;
		background-color: $color-white;
		box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

		&:hover &__side--front {
			transform: rotateY(0);
		}

		&__details {
			padding: 0 2rem;
		}

		&__side {
			height: auto;
			width: 100%;
			// changing to relative position since we no longer have two sides
			// in this screen breakpoint
			position: relative;
			box-shadow: none;


			&--back {
				// beginning on this breakpoint we don't want the back card to be rotated
				transform: rotateY(0);
				-webkit-clip-path: polygon(0 15%, 100% 0%, 100% 100%, 0% 100%);
				clip-path: polygon(0 15%, 100% 0%, 100% 100%, 0% 100%);
			}
		}

		// BACK SIDE STYLING on media query
		&__cta {
			position: relative;
			top: 0;
			left: 0;
			width: 100%;
			transform: translate(0);
			padding: 6rem 4rem 4rem 4rem;
		}

		&__price-box {
			margin-bottom: 3rem;
		}

		&__price-value {
			font-size: 4.5rem;
		}
	}
}
